&CMD_VIEW #116=$^\+(view|note|staffnote)s?(\/)?(append|rename|transfer|clone|approve|unapprove|lock|unlock)? ?(([^\/]+)(\/(([^=]+)(=([\s\S]+|[^=]+)?)?)?)?)?$:@pemit %#=[if(%9, setq(0, after(%9, =)))][switch(%3, append, u(fn_edit, %1, %5, %8, %q0, 1), rename, u(fn_rename, %1, %5, %8, %q0), transfer, u(fn_transfer, %1, %5, %8, %q0, 0), clone, u(fn_transfer, %1, %5, %8, %q0, 1), approve, u(fn_approve, %1, %5, %8, 1), unapprove, u(fn_approve, %1, %5, %8, 0), lock, u(fn_lock, %1, %5, %8, 1), unlock, u(fn_lock, %1, %5, %8, 0), wizlock, u(fn_wizlock, %1, %5, %8), if(%2, u(fn_error, no-switch, %0), if(%9, u(fn_edit, %1, %5, %8, %q0, 0), if(%8, u(fn_view-specific, %1, %5, %8), u(fn_view-list, %1, %5)))))]

@set #116/cmd_view=R

&FN_VIEW-LIST #116=[if(%1, [null(regmatchi(%1, (#|%\*)?(.+), -1 0 1))][switch(%q0, #, [setq(0, #%q1)], %\*, [setq(0, num(*%q1))], [setq(0, locate(%#, %q1, mhni))][switch(1, match(%q0, #-1*), [u(fn_error, no-see, %0)], match(%q0, #-2*), u(fn_error, dup-obj, %0))])][if(and(match(%q0, #-1*), not(%qE)), u(fn_error, no-obj, %0))][setq(3, %q0)], [setq(0, [loc(%#)] [lcon(loc(%#), connect)] [lcon(loc(%#), object)])][if(match(%q0, #-1*), u(fn_error, fatal, %0))][setq(3, %#)])][if(%0, [if(not(match(%0, view)), if(not(u(fn_perm, %0, %q3)), u(fn_error, no-read, %0)))], u(fn_error, fatal, %0))][if(not(%qE), [setq(0, sortby(fn_namesort, %q0))][setq(3, [iter(%q0, if(setr(1, u(fn_list-add, %0, itext(0))), %r%t[if(not(%1), [ansimoniker(h, %i0)]%xh:%xn%b)]%q1))])][if(not(%q3), setq(3, %bNone.))][if(%1, [edit(s(%xh<+%0>%xn Viewing %xn[u(#116/fn_list-format, %qA %qB %qC)] on [switch(%q0, %#, yourself, moniker(%q0))]:%xn), staffnotes, Staffnotes)], [edit(s(%xh<+%0>%xn Viewing %xn[u(#116/fn_list-format, %qA %qB %qC)] in this location:%xn), staffnotes, Staffnotes)])]%q3)]

&FN_LIST-ADD #116=[null(if(and(not(u(fn_perm, %0, %1)), not(match(%0, view))), u(fn_error, no-read, %0)))][switch(%0, view, [setq(A, %\%xnViews%xh)], note, [setq(B, %xc%xhNotes%xn%xh)], staffnote, [setq(C, \%\%xn%xrStaffnotes%xh)], u(fn_error, fatal, %0))][if(not(%qE), [setq(1, lattr(%1/_%0_*))][switch(%0, note, [setq(1, edit(%q1, _NOTE_, \%\%xc\%\%xh))][setq(1, edit(%q1, _, \%\%xn_\%\%xc\%\%xh))], staffnote, [setq(C, \%\%xn%xrStaffnotes%xh)][setq(1, edit(%q1, _STAFFNOTE_, \%\%xr))][setq(1, edit(%q1, _, \%\%xn_\%\%xr))])][setq(1, sort(%q1))][setq(2, %0)][if(and(match(%q2, view), u(fn_perm, note, %1)), [if([setr(3, [lattr(%1/_note_*)])], [setq(B, %xc%xhNotes%xn%xh)])][setq(3, sort(%q3))][setq(3, edit(%q3, _NOTE_, \%\%xc\%\%xh))][setq(3, edit(%q3, _, \%\%xn_\%\%xc\%\%xh))][setq(1, %q1 %q3)][setq(2, note)])][if(and(match(%q2, note), u(fn_perm, staffnote, )), [if([setr(3, [lattr(%1/_staffnote_*)])], [setq(C, \%\%xn%xrStaffnotes%xh)])][setq(3, sort(%q3))][setq(3, edit(%q3, _STAFFNOTE_, \%\%xr))][setq(3, edit(%q3, _, \%\%xn_\%\%xr))][setq(1, %q1 %q3)])][if(%q1, [setq(1, edit(%q1, _VIEW_, ))][setq(1, edit(%q1, %b, \%xn%b))][setq(1, edit(%q1, $, \%xn))][u(fn_list-format, %q1)].)])][setq(E, )]

&FN_LIST-FORMAT #116=[iter(%0, ifelse(eq(inum(0), words(%0)), [ifelse(neq(words(%0), 1), and%b, )][iter(edit(lcstr(%i0), _, %b), capstr(s(%i0)))], [iter(edit(lcstr(%i0), _, %b), capstr(s(%i0)))][ifelse(neq(inum(0), dec(words(%0))), %, ,)]))]

&FN_VIEW-SPECIFIC #116=[if(%1, [null(regmatchi(%1, (#|%\*)?(.+), -1 0 1))][switch(%q0, #, [setq(0, #%q1)], %\*, [setq(0, num(*%q1))], [setq(0, locate(%#, %q1, mhni))][switch(1, match(%q0, #-1*), [u(fn_error, no-see, %0)], match(%q0, #-2*), u(fn_error, dup-obj, %0))])][if(and(match(%q0, #-1*), not(%qE)), u(fn_error, no-obj, %0))], u(fn_error, no-target, %0))][if(and(not(u(fn_perm, %0, %q0)), not(match(%0, view))), u(fn_error, no-read, %0), [setq(1, _%0_[edit(%2, %b, _)])][if(not(setr(2, get(%q0/%q1))), u(fn_error, no-%0, %0), if(not(regmatchi(%q2, u(reg_metadata), Z Y X W V U T S R Q)), u(fn_error, fatal, %0, Malformed data.)))][if(not(%qE), [if(%2, [wheader([name(%q0)] - [iter(%2, capstr(lcstr(%i0)))])]%r%r[%qQ]%r%r%t%xh%xwLast edited on [timefmt($A{,} $B $d{,} $G at $X, %qY)] by [ansimoniker(hw, %qX)].%xn[if(match(%qW, approved), %r%t%xh%xwApproved on [timefmt($A{,} $B $d{,} $G at $X, %qV)] by [ansimoniker(hw, %qU)].%xn)][if(or(match(%qT, locked), match(%qT, wizlocked)), %r%t%xh%xwLocked on [timefmt($A{,} $B $d{,} $G at $X, %qS)] by [ansimoniker(hw, %qR)].%xn)]%r[wfooter()])])])]

&FN_EDIT #116=[if(%1, [null(regmatchi(%1, (#|%\*)?(.+), -1 0 1))][switch(%q0, #, [setq(0, #%q1)], %\*, [setq(0, num(*%q1))], [setq(0, locate(%#, %q1, mhni))][switch(1, match(%q0, #-1*), [u(fn_error, no-see, %0)], match(%q0, #-2*), u(fn_error, dup-obj, %0))])][if(and(match(%q0, #-1*), not(%qE)), u(fn_error, no-obj, %0))], u(fn_error, no-target, %0))][if(not(u(fn_perm, %0, %q0)), u(fn_error, no-edit, %0), [setq(1, _%0_[edit(%2, %b, _)])][if(and(not(setr(2, get(%q0/%q1))), not(%3)), u(fn_error, no-%0, %0), if(regmatchi(%q2, u(reg_metadata), Z Y X W V U T S R Q), [switch(%qT, locked, if(not(isstaff(%#)), u(fn_error, locked, %0, %2)), wizlocked, if(not(hasflag(%#, W)), u(fn_error, locked, %0, %2)))], [setq(T, unlocked)][setq(S, 0)][setq(R, #-1)]))][if(not(%qE), [if(and(match(%qW, approved), not(match(%0, staffnote))), set(%q0, _staffnote_[edit(%0 - %2 ([timefmt($F, %qV)]), %b, _)]:%qZ))][if(%3, [if(%4, setq(2, %qQ), setq(2, ))][set(%q0, %q1:[secs()]|%#|unapproved|0|#-1|%qT|%qS|%qR|%q2%3)]%xh<+%0>%xn [switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%2, capstr(lcstr(%i0)))]" [switch(%4, 0, set, 1, appended)]., [set(%q0, %q1:)]%xh<+%0>%xn [switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%2, capstr(lcstr(%i0)))]" cleared.)])])]

&FN_RENAME #116=[if(%1, [null(regmatchi(%1, (#|%\*)?(.+), -1 0 1))][switch(%q0, #, [setq(0, #%q1)], %\*, [setq(0, num(*%q1))], [setq(0, locate(%#, %q1, mhni))][switch(1, match(%q0, #-1*), [u(fn_error, no-see, %0)], match(%q0, #-2*), u(fn_error, dup-obj, %0))])][if(and(match(%q0, #-1*), not(%qE)), u(fn_error, no-obj, %0))], u(fn_error, no-target, %0))][if(not(u(fn_perm, %0, %q0)), u(fn_error, no-edit, %0), if(not(get(%q0/[setr(1, _%0_[edit(%2, %b, _)])])), u(fn_error, no-%0, %0), [if(regmatchi(get(%q0/%q1), u(reg_metadata), Z Y X W V U T S R Q), [switch(%qT, locked, if(not(isstaff(%#)), u(fn_error, locked, %0, %2)), wizlocked, if(not(hasflag(%#, W)), u(fn_error, locked, %0, %2)))])][if(not(%qE), if(get(%q0/[setr(2, _%0_[edit(%3, %b, _)])]), u(fn_error, dup-%0, %0), [set(%q0, %q2:[get(%q0/%q1)])][set(%q0, %q1:)]%xh<+%0>%xn [switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%2, capstr(lcstr(%i0)))]" has been renamed to "[iter(%3, capstr(lcstr(%i0)))]".))]))]

&FN_TRANSFER #116=[if(%1, [null(regmatchi(%1, (#|%\*)?(.+), -1 0 1))][switch(%q0, #, [setq(0, #%q1)], %\*, [setq(0, num(*%q1))], [setq(0, locate(%#, %q1, mhni))][switch(1, match(%q0, #-1*), [u(fn_error, no-see, %0)], match(%q0, #-2*), u(fn_error, dup-obj, %0))])][if(and(match(%q0, #-1*), not(%qE)), u(fn_error, no-obj, %0))], u(fn_error, no-target, %0))][if(switch(%3, view, 0, note, 0, staffnote, 0, 1), u(fn_error, no-perm, %0), [if(not(u(fn_perm, %0, %q0)), u(fn_error, no-edit, %0), if(not(get(%q0/[setr(1, _%0_[edit(%2, %b, _)])])), u(fn_error, no-%0, %0), [if(regmatchi(get(%q0/%q1), u(reg_metadata), Z Y X W V U T S R Q), [switch(%qT, locked, if(not(isstaff(%#)), u(fn_error, locked, %0, %2)), wizlocked, if(not(hasflag(%#, W)), u(fn_error, locked, %0, %2)))])][if(not(%qE), if(get(%q0/[setr(2, _%3_[edit(%2, %b, _)])]), u(fn_error, dup-%3, %0), [set(%q0, %q2:[get(%q0/%q1)])][if(not(%4), set(%q0, %q1:))]%xh<+%0>%xn [switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%2, capstr(lcstr(%i0)))]" [switch(%4, 0, is now, 1, has been cloned to)] a [switch(%3, view, View, note, Note, staffnote, Staffnote)].))]))])]

&FN_APPROVE #116=[if(%1, [null(regmatchi(%1, (#|%\*)?(.+), -1 0 1))][switch(%q0, #, [setq(0, #%q1)], %\*, [setq(0, num(*%q1))], [setq(0, locate(%#, %q1, mhni))][switch(1, match(%q0, #-1*), [u(fn_error, no-see, %0)], match(%q0, #-2*), u(fn_error, dup-obj, %0))])][if(and(match(%q0, #-1*), not(%qE)), u(fn_error, no-obj, %0))], u(fn_error, no-target, %0))][if(not(u(fn_perm, staffnote, %q0)), u(fn_error, no-edit, %0), if(not(get(%q0/[setr(1, _%0_[edit(%2, %b, _)])])), u(fn_error, no-%0, %0), [if(regmatchi(get(%q0/%q1), u(reg_metadata), Z Y X W V U T S R Q), [switch(%qT, wizlocked, if(not(hasflag(%#, W)), u(fn_error, locked, %0, %2)))], u(fn_error, fatal, %0, Malformed data.))][if(not(%qE), [if(%3, [set(%q0, %q1:%qY|%qX|approved|[secs()]|%#|%qT|%qS|%qR|%qQ)]%xh<+%0>%xn [switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%2, capstr(lcstr(%i0)))]" has been approved., [set(%q0, %q1:%qY|%qX|unapproved|[secs()]|%#|%qT|%qS|%qR|%qQ)]%xh<+%0>%xn [switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%2, capstr(lcstr(%i0)))]" has been unapproved.)])]))]

&FN_LOCK #116=[if(%1, [null(regmatchi(%1, (#|%\*)?(.+), -1 0 1))][switch(%q0, #, [setq(0, #%q1)], %\*, [setq(0, num(*%q1))], [setq(0, locate(%#, %q1, mhni))][switch(1, match(%q0, #-1*), [u(fn_error, no-see, %0)], match(%q0, #-2*), u(fn_error, dup-obj, %0))])][if(and(match(%q0, #-1*), not(%qE)), u(fn_error, no-obj, %0))], u(fn_error, no-target, %0))][if(not(u(fn_perm, staffnote, %q0)), u(fn_error, no-edit, %0), if(not(get(%q0/[setr(1, _%0_[edit(%2, %b, _)])])), u(fn_error, no-%0, %0), [if(regmatchi(get(%q0/%q1), u(reg_metadata), Z Y X W V U T S R Q), [switch(%qT, wizlocked, if(not(hasflag(%#, W)), u(fn_error, locked, %0, %0, %2)))], u(fn_error, fatal, %0, Malformed data.))][if(not(%qE), [if(%3, [set(%q0, %q1:%qY|%qX|%qW|%qV|%qU|locked|[secs()]|%#|%qQ)]%xh<+%0>%xn [switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%2, capstr(lcstr(%i0)))]" has been locked to editing by anyone who isn't staff., [set(%q0, %q1:%qY|%qX|%qW|%qV|%qU|unlocked|[secs()]|%#|%qQ)]%xh<+%0>%xn [switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%2, capstr(lcstr(%i0)))]" has been unlocked and may be freely edited.)])]))]

&FN_WIZLOCK #116=[if(%1, [null(regmatchi(%1, (#|%\*)?(.+), -1 0 1))][switch(%q0, #, [setq(0, #%q1)], %\*, [setq(0, num(*%q1))], [setq(0, locate(%#, %q1, mhni))][switch(1, match(%q0, #-1*), [u(fn_error, no-see, %0)], match(%q0, #-2*), u(fn_error, dup-obj, %0))])][if(and(match(%q0, #-1*), not(%qE)), u(fn_error, no-obj, %0))], u(fn_error, no-target, %0))][if(not(hasflag(%#, W), u(fn_error, no-edit, %0), if(not(get(%q0/[setr(1, _%0_[edit(%2, %b, _)])])), u(fn_error, no-%0, %0), [if(regmatchi(get(%q0/%q1), u(reg_metadata), Z Y X W V U T S R Q), [switch(%qT, wizlocked, if(not(hasflag(%#, W)), u(fn_error, locked, %0, %2)))], u(fn_error, fatal, %0, Malformed data.))][if(not(%qE), [if(%3, [set(%q0, %q1:%qY|%qX|%qW|%qV|%qU|wizlocked|[secs()]|%#|%qQ)]%xh<+%0>%xn [switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%2, capstr(lcstr(%i0)))]" has been locked to editing by anyone who isn't a Wizard.)])])))]

&FN_PERM #116=or(if(not(match(%0, staffnote)), and(hastype(%#, P), match(%#, owner(%1)))), and(hastype(%#, P), isstaff(%#))) 

&FN_NAMESORT #116=[comp(name(%0),name(%1))]

&FN_ERROR #116=[setq(E, 1)]%xh<+%1>%xn [u(err_%0, %2, %3)]

&REG_METADATA #116=(%[0-9%]+)%\|(#-?%[0-9%]+)%\|(approved|unapproved)%\|(%[0-9%]+)%\|(#-?%[0-9%]+)%\|(locked|unlocked|wizlocked)%\|(%[0-9%]+)%\|(#-?%[0-9%]+)%\|(%[%\s%\S%]+|%[^=%]+)

&ERR_NO-SEE #116=I don't see that here.
&ERR_NO-OBJ #116=There is no such object.
&ERR_DUP-OBJ #116=There is more than one object by that name. Try the dbref of the one you want.
&ERR_NO-TARGET #116=You have to pick a target.
&ERR_NO-VIEW #116=There is no such View.
&ERR_DUP-VIEW #116=There's already a View there.
&ERR_NO-NOTE #116=There is no such Note.
&ERR_DUP-NOTE #116=There's already a Note there.
&ERR_NO-STAFFNOTE #116=There is no such Staffnote.
&ERR_DUP-STAFFNOTE #116=There's already a Staffnote there.
&ERR_NO-READ #116=You don't have permission to view that.
&ERR_NO-EDIT #116=You don't have permission to edit that.
&ERR_LOCKED #116=[switch(%0, view, View, note, Note, staffnote, Staffnote)] "[iter(%1, capstr(lcstr(%i0)))]" has been locked to editing by [moniker(%qR)]. Please contact staff if you wish to have it edited.
&ERR_NO-PERM #116=No such permission level exists. Please pick View, Note or Staffnote.
&ERR_NO-SWITCH #116=That isn't a valid switch. Options are /append, /rename, /transfer, /clone, /approve, /unapprove, /lock, and /unlock.
&ERR_FATAL #116=You have encountered an ambigous fatal error. Please put in a +bug job immediately describing how you ran into this error so that code staff can address it. Probable cause: %0
